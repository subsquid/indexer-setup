{
    "RefCount": "RefCountTo259",
    "CompactAssignments": "CompactAssignmentsTo257",
    "RewardDestination": "RewardDestinationTo257",
    "Credential": "u64",
    "CredentialSet": "BTreeSet<Credential>",
    "BlockAndTime": {
      "block": "u32",
      "time": "u64"
    },
    "ThreadId": "u64",
    "PostId": "u64",
    "InputValidationLengthConstraint": {
      "min": "u16",
      "max_min_diff": "u16"
    },
    "WorkingGroup": {
      "_enum": [
        "Storage",
        "Content",
        "OperationsAlpha",
        "Gateway",
        "Distribution",
        "OperationsBeta",
        "OperationsGamma"
      ]
    },
    "SlashingTerms": {
      "_enum": {
        "Unslashable": "Null",
        "Slashable": "SlashableTerms"
      }
    },
    "SlashableTerms": {
      "max_count": "u16",
      "max_percent_pts_per_time": "u16"
    },
    "MemoText": "Text",
    "Address": "AccountId",
    "LookupSource": "AccountId",
    "EntryMethod": {
      "_enum": {
        "Paid": "u64",
        "Screening": "AccountId",
        "Genesis": "Null"
      }
    },
    "MemberId": "u64",
    "PaidTermId": "u64",
    "SubscriptionId": "u64",
    "Membership": {
      "handle": "Text",
      "avatar_uri": "Text",
      "about": "Text",
      "registered_at_block": "u32",
      "registered_at_time": "u64",
      "entry": "EntryMethod",
      "suspended": "bool",
      "subscription": "Option<SubscriptionId>",
      "root_account": "GenericAccountId",
      "controller_account": "GenericAccountId"
    },
    "PaidMembershipTerms": {
      "fee": "u128",
      "text": "Text"
    },
    "ActorId": "u64",
    "ElectionStage": {
      "_enum": {
        "Announcing": "u32",
        "Voting": "u32",
        "Revealing": "u32"
      }
    },
    "ElectionStake": {
      "new": "u128",
      "transferred": "u128"
    },
    "SealedVote": {
      "voter": "GenericAccountId",
      "commitment": "Hash",
      "stake": "ElectionStake",
      "vote": "Option<GenericAccountId>"
    },
    "TransferableStake": {
      "seat": "u128",
      "backing": "u128"
    },
    "ElectionParameters": {
      "announcing_period": "u32",
      "voting_period": "u32",
      "revealing_period": "u32",
      "council_size": "u32",
      "candidacy_limit": "u32",
      "new_term_duration": "u32",
      "min_council_stake": "u128",
      "min_voting_stake": "u128"
    },
    "Seat": {
      "member": "GenericAccountId",
      "stake": "u128",
      "backers": "Backers"
    },
    "Seats": "Vec<Seat>",
    "Backer": {
      "member": "GenericAccountId",
      "stake": "u128"
    },
    "Backers": "Vec<Backer>",
    "RoleParameters": {
      "min_stake": "u128",
      "min_actors": "u32",
      "max_actors": "u32",
      "reward": "u128",
      "reward_period": "u32",
      "bonding_period": "u32",
      "unbonding_period": "u32",
      "min_service_period": "u32",
      "startup_grace_period": "u32",
      "entry_request_fee": "u128"
    },
    "PostTextChange": {
      "expired_at": "BlockAndTime",
      "text": "Text"
    },
    "ModerationAction": {
      "moderated_at": "BlockAndTime",
      "moderator_id": "GenericAccountId",
      "rationale": "Text"
    },
    "ChildPositionInParentCategory": {
      "parent_id": "CategoryId",
      "child_nr_in_parent_category": "u32"
    },
    "CategoryId": "u64",
    "Category": {
      "id": "CategoryId",
      "title": "Text",
      "description": "Text",
      "created_at": "BlockAndTime",
      "deleted": "bool",
      "archived": "bool",
      "num_direct_subcategories": "u32",
      "num_direct_unmoderated_threads": "u32",
      "num_direct_moderated_threads": "u32",
      "position_in_parent_category": "Option<ChildPositionInParentCategory>",
      "moderator_id": "GenericAccountId"
    },
    "Thread": {
      "id": "ThreadId",
      "title": "Text",
      "category_id": "CategoryId",
      "nr_in_category": "u32",
      "moderation": "Option<ModerationAction>",
      "num_unmoderated_posts": "u32",
      "num_moderated_posts": "u32",
      "created_at": "BlockAndTime",
      "author_id": "GenericAccountId"
    },
    "Post": {
      "id": "PostId",
      "thread_id": "ThreadId",
      "nr_in_thread": "u32",
      "current_text": "Text",
      "moderation": "Option<ModerationAction>",
      "text_change_history": "Vec<PostTextChange>",
      "created_at": "BlockAndTime",
      "author_id": "GenericAccountId"
    },
    "ReplyId": "u64",
    "Reply": {
      "owner": "GenericAccountId",
      "thread_id": "ThreadId",
      "text": "Text",
      "moderation": "Option<ModerationAction>"
    },
    "StakeId": "u64",
    "Stake": {
      "created": "u32",
      "staking_status": "StakingStatus"
    },
    "StakingStatus": {
      "_enum": {
        "NotStaked": "Null",
        "Staked": "Staked"
      }
    },
    "Staked": {
      "staked_amount": "u128",
      "staked_status": "StakedStatus",
      "next_slash_id": "u64",
      "ongoing_slashes": "BTreeMap<u64,Slash>"
    },
    "StakedStatus": {
      "_enum": {
        "Normal": "Null",
        "Unstaking": "Unstaking"
      }
    },
    "Unstaking": {
      "started_at_block": "u32",
      "is_active": "bool",
      "blocks_remaining_in_active_period_for_unstaking": "u32"
    },
    "Slash": {
      "started_at_block": "u32",
      "is_active": "bool",
      "blocks_remaining_in_active_period_for_slashing": "u32",
      "slash_amount": "u128"
    },
    "MintId": "u64",
    "Mint": {
      "capacity": "u128",
      "next_adjustment": "Option<NextAdjustment>",
      "created_at": "u32",
      "total_minted": "u128"
    },
    "MintBalanceOf": "u128",
    "BalanceOfMint": "u128",
    "NextAdjustment": {
      "adjustment": "AdjustOnInterval",
      "at_block": "u32"
    },
    "AdjustOnInterval": {
      "block_interval": "u32",
      "adjustment_type": "AdjustCapacityBy"
    },
    "AdjustCapacityBy": {
      "_enum": {
        "Setting": "u128",
        "Adding": "u128",
        "Reducing": "u128"
      }
    },
    "RecipientId": "u64",
    "RewardRelationshipId": "u64",
    "Recipient": {
      "total_reward_received": "u128",
      "total_reward_missed": "u128"
    },
    "RewardRelationship": {
      "recipient": "RecipientId",
      "mint_id": "MintId",
      "account": "GenericAccountId",
      "amount_per_payout": "u128",
      "next_payment_at_block": "Option<u32>",
      "payout_interval": "Option<u32>",
      "total_reward_received": "u128",
      "total_reward_missed": "u128"
    },
    "ApplicationId": "u64",
    "OpeningId": "u64",
    "Application": {
      "opening_id": "OpeningId",
      "application_index_in_opening": "u32",
      "add_to_opening_in_block": "u32",
      "active_role_staking_id": "Option<StakeId>",
      "active_application_staking_id": "Option<StakeId>",
      "stage": "ApplicationStage",
      "human_readable_text": "Text"
    },
    "ApplicationStage": {
      "_enum": {
        "Active": "Null",
        "Unstaking": "UnstakingApplicationStage",
        "Inactive": "InactiveApplicationStage"
      }
    },
    "ActivateOpeningAt": {
      "_enum": {
        "CurrentBlock": "Null",
        "ExactBlock": "u32"
      }
    },
    "ApplicationRationingPolicy": {
      "max_active_applicants": "u32"
    },
    "OpeningStage": {
      "_enum": {
        "WaitingToBegin": "WaitingToBeingOpeningStageVariant",
        "Active": "ActiveOpeningStageVariant"
      }
    },
    "StakingPolicy": {
      "amount": "u128",
      "amount_mode": "StakingAmountLimitMode",
      "crowded_out_unstaking_period_length": "Option<u32>",
      "review_period_expired_unstaking_period_length": "Option<u32>"
    },
    "Opening": {
      "created": "u32",
      "stage": "OpeningStage",
      "max_review_period_length": "u32",
      "application_rationing_policy": "Option<ApplicationRationingPolicy>",
      "application_staking_policy": "Option<StakingPolicy>",
      "role_staking_policy": "Option<StakingPolicy>",
      "human_readable_text": "Text"
    },
    "WaitingToBeingOpeningStageVariant": {
      "begins_at_block": "u32"
    },
    "ActiveOpeningStageVariant": {
      "stage": "ActiveOpeningStage",
      "applications_added": "BTreeSet<ApplicationId>",
      "active_application_count": "u32",
      "unstaking_application_count": "u32",
      "deactivated_application_count": "u32"
    },
    "ActiveOpeningStage": {
      "_enum": {
        "AcceptingApplications": "AcceptingApplications",
        "ReviewPeriod": "ReviewPeriod",
        "Deactivated": "Deactivated"
      }
    },
    "AcceptingApplications": {
      "started_accepting_applicants_at_block": "u32"
    },
    "ReviewPeriod": {
      "started_accepting_applicants_at_block": "u32",
      "started_review_period_at_block": "u32"
    },
    "Deactivated": {
      "cause": "OpeningDeactivationCause",
      "deactivated_at_block": "u32",
      "started_accepting_applicants_at_block": "u32",
      "started_review_period_at_block": "Option<u32>"
    },
    "OpeningDeactivationCause": {
      "_enum": [
        "CancelledBeforeActivation",
        "CancelledAcceptingApplications",
        "CancelledInReviewPeriod",
        "ReviewPeriodExpired",
        "Filled"
      ]
    },
    "InactiveApplicationStage": {
      "deactivation_initiated": "u32",
      "deactivated": "u32",
      "cause": "ApplicationDeactivationCause"
    },
    "UnstakingApplicationStage": {
      "deactivation_initiated": "u32",
      "cause": "ApplicationDeactivationCause"
    },
    "ApplicationDeactivationCause": {
      "_enum": [
        "External",
        "Hired",
        "NotHired",
        "CrowdedOut",
        "OpeningCancelled",
        "ReviewPeriodExpired",
        "OpeningFilled"
      ]
    },
    "StakingAmountLimitMode": {
      "_enum": [
        "AtLeast",
        "Exact"
      ]
    },
    "ChannelId": "u64",
    "CuratorId": "u64",
    "CuratorOpeningId": "u64",
    "CuratorApplicationId": "u64",
    "LeadId": "u64",
    "PrincipalId": "u64",
    "OptionalText": "Option<Text>",
    "Channel": {
      "owner": "ChannelOwner",
      "num_videos": "u64",
      "is_censored": "bool",
      "reward_account": "Option<GenericAccountId>",
      "collaborators": "BTreeSet<MemberId>"
    },
    "ChannelContentType": {
      "_enum": [
        "Video",
        "Music",
        "Ebook"
      ]
    },
    "ChannelCurationStatus": {
      "_enum": [
        "Normal",
        "Censored"
      ]
    },
    "ChannelPublicationStatus": {
      "_enum": [
        "Public",
        "Unlisted"
      ]
    },
    "CurationActor": {
      "_enum": {
        "Lead": "Null",
        "Curator": "CuratorId"
      }
    },
    "Curator": {
      "role_account": "GenericAccountId",
      "reward_relationship": "Option<RewardRelationshipId>",
      "role_stake_profile": "Option<CuratorRoleStakeProfile>",
      "stage": "CuratorRoleStage",
      "induction": "CuratorInduction",
      "principal_id": "PrincipalId"
    },
    "CuratorApplication": {
      "role_account": "GenericAccountId",
      "curator_opening_id": "CuratorOpeningId",
      "member_id": "MemberId",
      "application_id": "ApplicationId"
    },
    "CuratorOpening": {
      "opening_id": "OpeningId",
      "curator_applications": "Vec<CuratorApplicationId>",
      "policy_commitment": "OpeningPolicyCommitment"
    },
    "Lead": {
      "member_id": "MemberId",
      "role_account": "GenericAccountId",
      "reward_relationship": "Option<RewardRelationshipId>",
      "inducted": "u32",
      "stage": "LeadRoleState"
    },
    "OpeningPolicyCommitment": {
      "application_rationing_policy": "Option<ApplicationRationingPolicy>",
      "max_review_period_length": "u32",
      "application_staking_policy": "Option<StakingPolicy>",
      "role_staking_policy": "Option<StakingPolicy>",
      "role_slashing_terms": "SlashingTerms",
      "fill_opening_successful_applicant_application_stake_unstaking_period": "Option<u32>",
      "fill_opening_failed_applicant_application_stake_unstaking_period": "Option<u32>",
      "fill_opening_failed_applicant_role_stake_unstaking_period": "Option<u32>",
      "terminate_application_stake_unstaking_period": "Option<u32>",
      "terminate_role_stake_unstaking_period": "Option<u32>",
      "exit_role_application_stake_unstaking_period": "Option<u32>",
      "exit_role_stake_unstaking_period": "Option<u32>"
    },
    "Principal": {
      "_enum": {
        "Lead": "Null",
        "Curator": "CuratorId",
        "ChannelOwner": "ChannelId"
      }
    },
    "WorkingGroupUnstaker": {
      "_enum": {
        "Lead": "LeadId",
        "Curator": "CuratorId"
      }
    },
    "CuratorApplicationIdToCuratorIdMap": "BTreeMap<ApplicationId,CuratorId>",
    "CuratorApplicationIdSet": "BTreeSet<CuratorApplicationId>",
    "CuratorRoleStakeProfile": {
      "stake_id": "StakeId",
      "termination_unstaking_period": "Option<u32>",
      "exit_unstaking_period": "Option<u32>"
    },
    "CuratorRoleStage": {
      "_enum": {
        "Active": "Null",
        "Unstaking": "CuratorExitSummary",
        "Exited": "CuratorExitSummary"
      }
    },
    "CuratorExitSummary": {
      "origin": "CuratorExitInitiationOrigin",
      "initiated_at_block_number": "u32",
      "rationale_text": "Text"
    },
    "CuratorExitInitiationOrigin": {
      "_enum": [
        "Lead",
        "Curator"
      ]
    },
    "LeadRoleState": {
      "_enum": {
        "Active": "Null",
        "Exited": "ExitedLeadRole"
      }
    },
    "ExitedLeadRole": {
      "initiated_at_block_number": "u32"
    },
    "CuratorInduction": {
      "lead": "LeadId",
      "curator_application_id": "CuratorApplicationId",
      "at_block": "u32"
    },
    "RationaleText": "Bytes",
    "ApplicationOf": {
      "role_account_id": "GenericAccountId",
      "opening_id": "OpeningId",
      "member_id": "MemberId",
      "application_id": "ApplicationId"
    },
    "ApplicationIdSet": "BTreeSet<ApplicationId>",
    "ApplicationIdToWorkerIdMap": "BTreeMap<ApplicationId,WorkerId>",
    "WorkerId": "u64",
    "WorkerOf": {
      "member_id": "MemberId",
      "role_account_id": "GenericAccountId",
      "reward_relationship": "Option<RewardRelationshipId>",
      "role_stake_profile": "Option<RoleStakeProfile>"
    },
    "OpeningOf": {
      "hiring_opening_id": "OpeningId",
      "applications": "BTreeSet<ApplicationId>",
      "policy_commitment": "OpeningPolicyCommitment",
      "opening_type": "OpeningType"
    },
    "StorageProviderId": "u64",
    "OpeningType": {
      "_enum": {
        "Leader": "Null",
        "Worker": "Null"
      }
    },
    "HiringApplicationId": "u64",
    "RewardPolicy": {
      "amount_per_payout": "u128",
      "next_payment_at_block": "u32",
      "payout_interval": "Option<u32>"
    },
    "WorkingGroupOpeningPolicyCommitment": {
      "application_rationing_policy": "Option<ApplicationRationingPolicy>",
      "max_review_period_length": "u32",
      "application_staking_policy": "Option<StakingPolicy>",
      "role_staking_policy": "Option<StakingPolicy>",
      "role_slashing_terms": "SlashingTerms",
      "fill_opening_successful_applicant_application_stake_unstaking_period": "Option<u32>",
      "fill_opening_failed_applicant_application_stake_unstaking_period": "Option<u32>",
      "fill_opening_failed_applicant_role_stake_unstaking_period": "Option<u32>",
      "terminate_application_stake_unstaking_period": "Option<u32>",
      "terminate_role_stake_unstaking_period": "Option<u32>",
      "exit_role_application_stake_unstaking_period": "Option<u32>",
      "exit_role_stake_unstaking_period": "Option<u32>"
    },
    "RoleStakeProfile": {
      "stake_id": "StakeId",
      "termination_unstaking_period": "Option<u32>",
      "exit_unstaking_period": "Option<u32>"
    },
    "Url": "Text",
    "IPNSIdentity": "Text",
    "ServiceProviderRecord": {
      "identity": "IPNSIdentity",
      "expires_at": "u32"
    },
    "ContentId": "Null",
    "LiaisonJudgement": {
      "_enum": [
        "Pending",
        "Accepted",
        "Rejected"
      ]
    },
    "DataObject": {
      "accepted": "bool",
      "deletion_prize": "u128",
      "size": "u64",
      "ipfsContentId": "Bytes"
    },
    "DataObjectStorageRelationshipId": "Null",
    "DataObjectStorageRelationship": "Null",
    "DataObjectTypeId": "Null",
    "DataObjectType": "Null",
    "DataObjectsMap": "BTreeMap<ContentId,DataObject>",
    "ProposalId": "u32",
    "ProposalStatus": {
      "_enum": {
        "Active": "Option<ActiveStake>",
        "Finalized": "Finalized"
      }
    },
    "ProposalOf": {
      "parameters": "ProposalParameters",
      "proposerId": "MemberId",
      "title": "Bytes",
      "description": "Bytes",
      "createdAt": "u32",
      "status": "ProposalStatus",
      "votingResults": "VotingResults"
    },
    "ProposalDetails": {
      "_enum": {
        "Text": "Bytes",
        "RuntimeUpgrade": "Bytes",
        "SetElectionParameters": "ElectionParameters",
        "Spending": "(Balance,AccountId)",
        "SetLead": "Option<SetLeadParams>",
        "SetContentWorkingGroupMintCapacity": "u128",
        "EvictStorageProvider": "GenericAccountId",
        "SetValidatorCount": "u32",
        "SetStorageRoleParameters": "RoleParameters",
        "AddWorkingGroupLeaderOpening": "AddOpeningParameters",
        "BeginReviewWorkingGroupLeaderApplication": "(OpeningId,WorkingGroup)",
        "FillWorkingGroupLeaderOpening": "FillOpeningParameters",
        "SetWorkingGroupMintCapacity": "(Balance,WorkingGroup)",
        "DecreaseWorkingGroupLeaderStake": "(WorkerId,Balance,WorkingGroup)",
        "SlashWorkingGroupLeaderStake": "(WorkerId,Balance,WorkingGroup)",
        "SetWorkingGroupLeaderReward": "(WorkerId,Balance,WorkingGroup)",
        "TerminateWorkingGroupLeaderRole": "TerminateRoleParameters"
      }
    },
    "ProposalDetailsOf": {
      "_enum": {
        "Text": "Bytes",
        "RuntimeUpgrade": "Bytes",
        "SetElectionParameters": "ElectionParameters",
        "Spending": "(Balance,AccountId)",
        "SetLead": "Option<SetLeadParams>",
        "SetContentWorkingGroupMintCapacity": "u128",
        "EvictStorageProvider": "GenericAccountId",
        "SetValidatorCount": "u32",
        "SetStorageRoleParameters": "RoleParameters",
        "AddWorkingGroupLeaderOpening": "AddOpeningParameters",
        "BeginReviewWorkingGroupLeaderApplication": "(OpeningId,WorkingGroup)",
        "FillWorkingGroupLeaderOpening": "FillOpeningParameters",
        "SetWorkingGroupMintCapacity": "(Balance,WorkingGroup)",
        "DecreaseWorkingGroupLeaderStake": "(WorkerId,Balance,WorkingGroup)",
        "SlashWorkingGroupLeaderStake": "(WorkerId,Balance,WorkingGroup)",
        "SetWorkingGroupLeaderReward": "(WorkerId,Balance,WorkingGroup)",
        "TerminateWorkingGroupLeaderRole": "TerminateRoleParameters"
      }
    },
    "VotingResults": {
      "abstensions": "u32",
      "approvals": "u32",
      "rejections": "u32",
      "slashes": "u32"
    },
    "ProposalParameters": {
      "votingPeriod": "u32",
      "gracePeriod": "u32",
      "approvalQuorumPercentage": "u32",
      "approvalThresholdPercentage": "u32",
      "slashingQuorumPercentage": "u32",
      "slashingThresholdPercentage": "u32",
      "requiredStake": "Option<u128>"
    },
    "VoteKind": {
      "_enum": [
        "Approve",
        "Reject",
        "Slash",
        "Abstain"
      ]
    },
    "ThreadCounter": {
      "author_id": "MemberId",
      "counter": "u32"
    },
    "DiscussionThread": {
      "title": "Bytes",
      "created_at": "u32",
      "author_id": "MemberId"
    },
    "DiscussionPost": {
      "text": "Bytes",
      "created_at": "u32",
      "updated_at": "u32",
      "author_id": "MemberId",
      "thread_id": "ThreadId",
      "edition_number": "u32"
    },
    "AddOpeningParameters": {
      "activate_at": "ActivateOpeningAt",
      "commitment": "OpeningPolicyCommitment",
      "human_readable_text": "Bytes",
      "working_group": "WorkingGroup"
    },
    "FillOpeningParameters": {
      "opening_id": "OpeningId",
      "successful_application_id": "ApplicationId",
      "reward_policy": "Option<RewardPolicy>",
      "working_group": "WorkingGroup"
    },
    "TerminateRoleParameters": {
      "worker_id": "WorkerId",
      "rationale": "Bytes",
      "slash": "bool",
      "working_group": "WorkingGroup"
    },
    "ActiveStake": {
      "stake_id": "StakeId",
      "source_account_id": "GenericAccountId"
    },
    "Finalized": {
      "proposalStatus": "ProposalDecisionStatus",
      "finalizedAt": "u32",
      "encodedUnstakingErrorDueToBrokenRuntime": "Option<Vec<u8>>",
      "stakeDataAfterUnstakingError": "Option<ActiveStake>"
    },
    "ProposalDecisionStatus": {
      "_enum": {
        "Canceled": "Null",
        "Vetoed": "Null",
        "Rejected": "Null",
        "Slashed": "Null",
        "Expired": "Null",
        "Approved": "Approved"
      }
    },
    "ExecutionFailed": {
      "error": "Bytes"
    },
    "Approved": {
      "_enum": {
        "PendingExecution": "Null",
        "Executed": "Null",
        "ExecutionFailed": "ExecutionFailed"
      }
    },
    "SetLeadParams": "(MemberId,GenericAccountId)",
    "Nonce": "u64",
    "EntityId": "u64",
    "ClassId": "u64",
    "CuratorGroupId": "u64",
    "VecMaxLength": "u16",
    "TextMaxLength": "u16",
    "HashedTextMaxLength": "Option<u16>",
    "PropertyId": "u16",
    "SchemaId": "u16",
    "SameController": "bool",
    "ClassPermissions": {
      "any_member": "bool",
      "entity_creation_blocked": "bool",
      "all_entity_property_values_locked": "bool",
      "maintainers": "Vec<CuratorGroupId>"
    },
    "PropertyTypeSingle": {
      "_enum": {
        "Bool": "Null",
        "Uint16": "Null",
        "Uint32": "Null",
        "Uint64": "Null",
        "Int16": "Null",
        "Int32": "Null",
        "Int64": "Null",
        "Text": "TextMaxLength",
        "Hash": "HashedTextMaxLength",
        "Reference": "(ClassId,SameController)"
      }
    },
    "PropertyTypeVector": {
      "vec_type": "PropertyTypeSingle",
      "max_length": "VecMaxLength"
    },
    "PropertyType": {
      "_enum": {
        "Single": "PropertyTypeSingle",
        "Vector": "PropertyTypeVector"
      }
    },
    "PropertyLockingPolicy": {
      "is_locked_from_maintainer": "bool",
      "is_locked_from_controller": "bool"
    },
    "Property": {
      "property_type": "PropertyType",
      "required": "bool",
      "unique": "bool",
      "name": "Text",
      "description": "Text",
      "locking_policy": "PropertyLockingPolicy"
    },
    "Schema": {
      "properties": "Vec<PropertyId>",
      "is_active": "bool"
    },
    "Class": {
      "class_permissions": "ClassPermissions",
      "properties": "Vec<Property>",
      "schemas": "Vec<Schema>",
      "name": "Text",
      "description": "Text",
      "maximum_entities_count": "EntityId",
      "current_number_of_entities": "EntityId",
      "default_entity_creation_voucher_upper_bound": "EntityId"
    },
    "ClassOf": {
      "class_permissions": "ClassPermissions",
      "properties": "Vec<Property>",
      "schemas": "Vec<Schema>",
      "name": "Text",
      "description": "Text",
      "maximum_entities_count": "EntityId",
      "current_number_of_entities": "EntityId",
      "default_entity_creation_voucher_upper_bound": "EntityId"
    },
    "EntityController": {
      "_enum": {
        "Maintainers": "Null",
        "Member": "MemberId",
        "Lead": "Null"
      }
    },
    "EntityPermissions": {
      "controller": "EntityController",
      "frozen": "bool",
      "referenceable": "bool"
    },
    "StoredValue": {
      "_enum": {
        "Bool": "bool",
        "Uint16": "u16",
        "Uint32": "u32",
        "Uint64": "u64",
        "Int16": "i16",
        "Int32": "i32",
        "Int64": "i64",
        "Text": "Text",
        "Hash": "Hash",
        "Reference": "EntityId"
      }
    },
    "VecStoredValue": {
      "_enum": {
        "Bool": "Vec<bool>",
        "Uint16": "Vec<u16>",
        "Uint32": "Vec<u32>",
        "Uint64": "Vec<u64>",
        "Int16": "Vec<i16>",
        "Int32": "Vec<i32>",
        "Int64": "Vec<i64>",
        "Hash": "Vec<Hash>",
        "Text": "Vec<Text>",
        "Reference": "Vec<EntityId>"
      }
    },
    "VecStoredPropertyValue": {
      "vec_value": "VecStoredValue",
      "nonce": "Nonce"
    },
    "StoredPropertyValue": {
      "_enum": {
        "Single": "StoredValue",
        "Vector": "VecStoredPropertyValue"
      }
    },
    "InboundReferenceCounter": {
      "total": "u32",
      "same_owner": "u32"
    },
    "Entity": {
      "entity_permissions": "EntityPermissions",
      "class_id": "ClassId",
      "supported_schemas": "Vec<SchemaId>",
      "values": "BTreeMap<PropertyId,StoredPropertyValue>",
      "reference_counter": "InboundReferenceCounter"
    },
    "EntityOf": {
      "entity_permissions": "EntityPermissions",
      "class_id": "ClassId",
      "supported_schemas": "Vec<SchemaId>",
      "values": "BTreeMap<PropertyId,StoredPropertyValue>",
      "reference_counter": "InboundReferenceCounter"
    },
    "CuratorGroup": {
      "curators": "BTreeSet<CuratorId>",
      "active": "bool"
    },
    "EntityCreationVoucher": {
      "maximum_entities_count": "EntityId",
      "entities_created": "EntityId"
    },
    "Actor": {
      "_enum": {
        "Curator": "(CuratorGroupId,u64)",
        "Member": "MemberId",
        "Lead": "Null"
      }
    },
    "EntityReferenceCounterSideEffect": {
      "total": "i32",
      "same_owner": "i32"
    },
    "ReferenceCounterSideEffects": "BTreeMap<EntityId,EntityReferenceCounterSideEffect>",
    "SideEffects": "Option<ReferenceCounterSideEffects>",
    "SideEffect": "Option<(EntityId,EntityReferenceCounterSideEffect)>",
    "Status": "bool",
    "InputValue": {
      "_enum": {
        "Bool": "bool",
        "Uint16": "u16",
        "Uint32": "u32",
        "Uint64": "u64",
        "Int16": "i16",
        "Int32": "i32",
        "Int64": "i64",
        "Text": "Text",
        "TextToHash": "Text",
        "Reference": "EntityId"
      }
    },
    "VecInputValue": {
      "_enum": {
        "Bool": "Vec<bool>",
        "Uint16": "Vec<u16>",
        "Uint32": "Vec<u32>",
        "Uint64": "Vec<u64>",
        "Int16": "Vec<i16>",
        "Int32": "Vec<i32>",
        "Int64": "Vec<i64>",
        "TextToHash": "Vec<Text>",
        "Text": "Vec<Text>",
        "Reference": "Vec<EntityId>"
      }
    },
    "InputPropertyValue": {
      "_enum": {
        "Single": "InputValue",
        "Vector": "VecInputValue"
      }
    },
    "ParameterizedEntity": {
      "_enum": {
        "InternalEntityJustAdded": "u32",
        "ExistingEntity": "EntityId"
      }
    },
    "ParametrizedPropertyValue": {
      "_enum": {
        "InputPropertyValue": "InputPropertyValue",
        "InternalEntityJustAdded": "u32",
        "InternalEntityVec": "Vec<ParameterizedEntity>"
      }
    },
    "ParametrizedClassPropertyValue": {
      "in_class_index": "PropertyId",
      "value": "ParametrizedPropertyValue"
    },
    "CreateEntityOperation": {
      "class_id": "ClassId"
    },
    "UpdatePropertyValuesOperation": {
      "entity_id": "ParameterizedEntity",
      "new_parametrized_property_values": "Vec<ParametrizedClassPropertyValue>"
    },
    "AddSchemaSupportToEntityOperation": {
      "entity_id": "ParameterizedEntity",
      "schema_id": "SchemaId",
      "parametrized_property_values": "Vec<ParametrizedClassPropertyValue>"
    },
    "OperationType": {
      "_enum": {
        "CreateEntity": "CreateEntityOperation",
        "UpdatePropertyValues": "UpdatePropertyValuesOperation",
        "AddSchemaSupportToEntity": "AddSchemaSupportToEntityOperation"
      }
    },
    "ClassPermissionsType": "Null",
    "ClassPropertyValue": "Null",
    "Operation": "Null",
    "ReferenceConstraint": "Null",
    "ContentParameters": "Null",
    "NewAsset": "Null",
    "ObjectOwner": "Null",
    "StorageObjectOwner": "Null",
    "UploadingStatus": "Null",
    "VoucherLimit": "Null",
    "StorageBucketId": "u64",
    "StorageBucketsPerBagValueConstraint": {
      "min": "u64",
      "max_min_diff": "u64"
    },
    "DataObjectId": "u64",
    "DynamicBagId": {
      "_enum": {
        "Member": "MemberId",
        "Channel": "u64"
      }
    },
    "Voucher": {
      "sizeLimit": "u64",
      "objectsLimit": "u64",
      "sizeUsed": "u64",
      "objectsUsed": "u64"
    },
    "DynamicBagType": {
      "_enum": [
        "Member",
        "Channel"
      ]
    },
    "DynamicBagCreationPolicy": {
      "numberOfStorageBuckets": "u64",
      "families": "BTreeMap<DistributionBucketFamilyId,u32>"
    },
    "DynamicBagDeletionPrize": {
      "account_id": "GenericAccountId",
      "prize": "u128"
    },
    "DynamicBagDeletionPrizeRecord": {
      "account_id": "GenericAccountId",
      "prize": "u128"
    },
    "Bag": {
      "stored_by": "BTreeSet<StorageBucketId>",
      "distributed_by": "BTreeSet<DistributionBucketId>",
      "deletion_prize": "Option<u128>",
      "objects_total_size": "u64",
      "objects_number": "u64"
    },
    "StorageBucket": {
      "operator_status": "StorageBucketOperatorStatus",
      "accepting_new_bags": "bool",
      "voucher": "Voucher",
      "assigned_bags": "u64"
    },
    "StaticBagId": {
      "_enum": {
        "Council": "Null",
        "WorkingGroup": "WorkingGroup"
      }
    },
    "Static": {
      "_enum": {
        "Council": "Null",
        "WorkingGroup": "WorkingGroup"
      }
    },
    "Dynamic": {
      "_enum": {
        "Member": "MemberId",
        "Channel": "u64"
      }
    },
    "BagId": {
      "_enum": {
        "Static": "Static",
        "Dynamic": "Dynamic"
      }
    },
    "DataObjectCreationParameters": {
      "size": "u64",
      "ipfsContentId": "Bytes"
    },
    "BagIdType": {
      "_enum": {
        "Static": "Static",
        "Dynamic": "Dynamic"
      }
    },
    "UploadParameters": {
      "bagId": "BagId",
      "objectCreationList": "Vec<DataObjectCreationParameters>",
      "deletionPrizeSourceAccountId": "GenericAccountId",
      "expectedDataSizeFee": "u128"
    },
    "StorageBucketIdSet": "BTreeSet<StorageBucketId>",
    "DataObjectIdSet": "BTreeSet<DataObjectId>",
    "ContentIdSet": "BTreeSet<Cid>",
    "Cid": "Bytes",
    "StorageBucketOperatorStatus": {
      "_enum": {
        "Missing": "Null",
        "InvitedStorageWorker": "WorkerId",
        "StorageWorker": "(WorkerId,GenericAccountId)"
      }
    },
    "DistributionBucketId": {
      "distribution_bucket_family_id": "DistributionBucketFamilyId",
      "distribution_bucket_index": "DistributionBucketIndex"
    },
    "DistributionBucketIndex": "u64",
    "DistributionBucketFamilyId": "u64",
    "DistributionBucket": {
      "accepting_new_bags": "bool",
      "distributing": "bool",
      "pending_invitations": "BTreeSet<WorkerId>",
      "operators": "BTreeSet<WorkerId>",
      "assigned_bags": "u64"
    },
    "DistributionBucketFamily": {
      "next_distribution_bucket_index": "DistributionBucketIndex"
    },
    "DataObjectIdMap": "BTreeMap<DataObjectId,DataObject>",
    "DistributionBucketIndexSet": "BTreeSet<DistributionBucketIndex>",
    "DynamicBagCreationPolicyDistributorFamiliesMap": "BTreeMap<DistributionBucketFamilyId,u32>",
    "ContentActor": {
      "_enum": {
        "Curator": "(CuratorGroupId,CuratorId)",
        "Member": "MemberId",
        "Lead": "Null",
        "Collaborator": "MemberId"
      }
    },
    "StorageAssets": {
      "object_creation_list": "Vec<DataObjectCreationParameters>",
      "expected_data_size_fee": "u128"
    },
    "ChannelOwner": {
      "_enum": {
        "Member": "MemberId",
        "Curators": "CuratorGroupId"
      }
    },
    "ChannelCategoryId": "u64",
    "ChannelCategory": {},
    "ChannelCategoryCreationParameters": {
      "meta": "Bytes"
    },
    "ChannelCategoryUpdateParameters": {
      "new_meta": "Bytes"
    },
    "ChannelCreationParameters": {
      "assets": "Option<StorageAssets>",
      "meta": "Option<Bytes>",
      "reward_account": "Option<GenericAccountId>",
      "collaborators": "BTreeSet<MemberId>"
    },
    "ChannelUpdateParameters": {
      "assets_to_upload": "Option<StorageAssets>",
      "new_meta": "Option<Bytes>",
      "reward_account": "Option<Option<GenericAccountId>>",
      "assets_to_remove": "BTreeSet<DataObjectId>",
      "collaborators": "Option<BTreeSet<MemberId>>"
    },
    "ChannelOwnershipTransferRequestId": "u64",
    "ChannelOwnershipTransferRequest": {
      "channel_id": "ChannelId",
      "new_owner": "ChannelOwner",
      "payment": "u128",
      "new_reward_account": "Option<GenericAccountId>"
    },
    "Video": {
      "in_channel": "ChannelId",
      "in_series": "Option<SeriesId>",
      "is_censored": "bool"
    },
    "VideoId": "u64",
    "VideoCategoryId": "u64",
    "VideoCategory": {},
    "VideoCategoryCreationParameters": {
      "meta": "Bytes"
    },
    "VideoCategoryUpdateParameters": {
      "new_meta": "Bytes"
    },
    "VideoCreationParameters": {
      "assets": "Option<StorageAssets>",
      "meta": "Option<Bytes>"
    },
    "VideoUpdateParameters": {
      "assets_to_upload": "Option<StorageAssets>",
      "new_meta": "Option<Bytes>",
      "assets_to_remove": "BTreeSet<DataObjectId>"
    },
    "Person": {
      "controlled_by": "PersonController"
    },
    "PersonId": "u64",
    "PersonController": {
      "_enum": {
        "Member": "MemberId",
        "Curators": "Null"
      }
    },
    "PersonActor": {
      "_enum": {
        "Member": "MemberId",
        "Curator": "CuratorId"
      }
    },
    "PersonCreationParameters": {
      "assets": "StorageAssets",
      "meta": "Bytes"
    },
    "PersonUpdateParameters": {
      "assets": "Option<StorageAssets>",
      "meta": "Option<Bytes>"
    },
    "Playlist": {
      "in_channel": "ChannelId"
    },
    "PlaylistId": "u64",
    "PlaylistCreationParameters": {
      "meta": "Bytes"
    },
    "PlaylistUpdateParameters": {
      "new_meta": "Bytes"
    },
    "SeriesId": "u64",
    "Series": {
      "in_channel": "ChannelId",
      "seasons": "Vec<Season>"
    },
    "Season": {
      "episodes": "Vec<VideoId>"
    },
    "SeriesParameters": {
      "assets": "Option<StorageAssets>",
      "seasons": "Option<Vec<Option<SeasonParameters>>>",
      "meta": "Option<Bytes>"
    },
    "SeasonParameters": {
      "assets": "Option<StorageAssets>",
      "episodes": "Option<Vec<Option<EpisodeParemters>>>",
      "meta": "Option<Bytes>"
    },
    "EpisodeParemters": {
      "_enum": {
        "NewVideo": "VideoCreationParameters",
        "ExistingVideo": "VideoId"
      }
    },
    "MaxNumber": "u32",
    "IsCensored": "bool",
    "VideoMigrationConfig": {
      "current_id": "VideoId",
      "final_id": "VideoId"
    },
    "ChannelMigrationConfig": {
      "current_id": "ChannelId",
      "final_id": "ChannelId"
    },
    "AccountInfo": "AccountInfoWithRefCount"
  }