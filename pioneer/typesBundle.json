{
  "spec": {
    "pioneer-runtime": {
      "Amount": "i128",
      "AmountOf": "Amount",
      "AuctionId": "u64",
      "AuctionIdOf": "AuctionId",
      "BalanceIdOf": "Balance",
      "MetaverseId": "u64",
      "FungibleTokenId": {
        "_enum": {
          "NativeToken": "TokenId",
          "FungibleToken": "TokenId",
          "DEXShare": "(TokenId, TokenId)",
          "MiningResource": "TokenId"
        }
      },
      "CurrencyIdOf": "FungibleTokenId",
      "TradingPairStatus": {
        "_enum": [
          "NotEnabled",
          "Enabled"
        ]
      },
      "TradingPair": "(FungibleTokenId,FungibleTokenId)",
      "TokenId": "u64",
      "SpotId": "u32",
      "ItemId": {
        "_enum": {
          "NFT": "AssetId",
          "Spot": "(u64, MetaverseId)",
          "Metaverse": "MetaverseId",
          "Block": "u64"
        }
      },
      "Address": "MultiAddress",
      "LookupSource": "MultiAddress",
      "AccountInfo": "AccountInfoWithTripleRefCount",
      "AssetInfo": {
        "owner": "AccountId",
        "data": "AssetData"
      },
      "AssetId": "u64",
      "AssetData": {
        "name": "Text",
        "description": "Text",
        "properties": "Text",
        "supporters": "Vec<AccountId>"
      },
      "AuctionItem": {
        "itemId": "ItemId",
        "recipient": "AccountId",
        "initialAmount": "Balance",
        "amount": "Balance",
        "startTime": "u32",
        "endTime": "u32",
        "auctionType": "AuctionType",
        "listingLevel": "ListingLevel",
        "currencyId": "FungibleTokenId"
      },
      "AuctionInfo": {
        "bid": "Option<(AccountId,Balance)>",
        "start": "BlockNumber",
        "end": "Option<BlockNumber>"
      },
      "AuctionType": {
        "_enum": [
          "Auction",
          "BuyNow"
        ]
      },
      "RentId": "u64",
      "RentalInfo": {
        "owner": "AccountId",
        "start": "BlockNumber",
        "end": "Option<BlockNumber>",
        "price_per_block": "Balance"
      },
      "CountryId": "u64",
      "CollectionId": "u64",
      "ClassId": "u32",
      "ClassInfoOf": {
        "metadata": "Vec<u8>",
        "totalIssuance": "TokenId",
        "owner": "AccountId",
        "data": "NftClassData"
      },
      "TokenInfoOf": {
        "metadata": "Vec<u8>",
        "owner": "AccountId",
        "data": "NftAssetData"
      },
      "NftCollectionData": {
        "name": "Vec<u8>",
        "owner": "AccountId",
        "properties": "Vec<u8>"
      },
      "NftGroupCollectionData": {
        "name": "Vec<u8>",
        "properties": "Vec<u8>"
      },
      "NftAssetData": {
        "deposit": "Balance",
        "attributes": "Attributes"
      },
      "NftClassData": {
        "deposit": "Balance",
        "attributes": "Attributes",
        "tokenType": "TokenType",
        "collectionType": "CollectionType",
        "totalSupply": "u64",
        "initialSupply": "u64"
      },
      "NetworkId": {
        "_enum": {
          "Any": "Null",
          "Named": "Vec<u8>",
          "Polkadot": "Null",
          "Kusama": "Null"
        }
      },
      "CollectionType": {
        "_enum": [
          "Collectable",
          "Wearable",
          "Executable"
        ]
      },
      "CurrencyId": "SocialTokenCurrencyId",
      "TokenSymbol": {
        "_enum": [
          "NUUM",
          "AUSD",
          "ACA",
          "DOT"
        ]
      },
      "CountryCurrencyId": "u32",
      "ChainId": {
        "_enum": {
          "RelayChain": "Null",
          "ParaChain": "ParaId"
        }
      },
      "XCurrencyId": {
        "chain_id": "ChainId",
        "currency_id": "CurrencyId"
      },
      "GroupCollectionId": "u64",
      "ClassIdOf": "ClassId",
      "TokenIdOf": "TokenId",
      "PoolId": "u32",
      "SocialTokenCurrencyId": {
        "_enum": {
          "NativeToken": "TokenId",
          "FungibleToken": "TokenId",
          "DEXShare": "(TokenId, TokenId)",
          "MiningResource": "TokenId"
        }
      },
      "Country": {
        "owner": "AccountId",
        "metadata": "Text",
        "currency_id": "SocialTokenCurrencyId"
      },
      "Ticker": "Vec<u8>",
      "Token": {
        "ticker": "Ticker",
        "total_supply": "Balance"
      },
      "CountryFund": {
        "vault": "AccountId",
        "value": "u128",
        "backing": "u128",
        "currency_id": "SocialTokenCurrencyId"
      },
      "LandId": "u64",
      "BlindBoxId": "u64",
      "BlindBoxType": {
        "_enum": [
          "KSM",
          "NUUM",
          "MainnetNFTHat",
          "MainnetNFTJacket",
          "MainnetNFTPants",
          "MainnetNFTShoes",
          "CollectableNFT"
        ]
      },
      "BlindBoxRewardItem": {
        "recipient": "AccountId",
        "amount": "u32",
        "blindbox_type": "BlindBoxType"
      },
      "TokenType": {
        "_enum": [
          "Transferable",
          "BoundToAddress"
        ]
      },
      "ListingLevel": {
        "_enum": {
          "Global": "Null",
          "Local": "MetaverseId"
        }
      },
      "ResourceId": "[u8; 32]",
      "VoteThreshold": {
        "_enum": [
          "SuperMajorityApprove",
          "SuperMajorityAgainst",
          "RelativeMajority"
        ]
      },
      "ProposalId": "u64",
      "ReferendumId": "u64",
      "CountryParameter": {
        "_enum": {
          "MaxProposals": "u8",
          "SetReferendumJury": "AccountId"
        }
      },
      "PreimageStatus": {
        "_enum": {
          "Missing": "BlockNumber",
          "Available": {
            "data": "Vec<u8>",
            "provider": "AccountId",
            "deposit": "Balance",
            "since": "BlockNumber",
            "expiry": "Option<BlockNumber>"
          }
        }
      },
      "ReferendumParameters": {
        "voting_threshold": "Option<VoteThreshold>",
        "min_proposal_launch_period": "BlockNumber",
        "voting_period": "BlockNumber",
        "enactment_period": "BlockNumber",
        "local_vote_locking_period": "BlockNumber",
        "max_proposals_per_metaverse": "u8"
      },
      "Vote": {
        "aye": "bool"
      },
      "Tally": {
        "ayes": "Balance",
        "nays": "Balance",
        "turnout": "Balance"
      },
      "VotingRecord": {
        "votes": "Vec<(ReferendumId,Vote<Balance>)>",
        "prior": "PriorLock<BlockNumber, Balance>"
      },
      "ProposalInfo": {
        "proposed_by": "AccountId",
        "hash": "Hash",
        "description": "Vec<u8>",
        "referendum_launch_block": "BlockNumber"
      },
      "ReferendumStatus": {
        "end": "BlockNumber",
        "metaverse": "MetaverseId",
        "proposal": "ProposalId",
        "tally": "Tally<Balance>",
        "threshold": "Option<VoteThreshold>"
      },
      "RoundIndex": "u32",
      "MetaverseMetadata": "Vec<u8>",
      "VestingScheduleOf": "VestingSchedule",
      "VestingSchedule": {
        "token": "FungibleTokenId",
        "start": "BlockNumber",
        "period": "BlockNumber",
        "periodCount": "u32",
        "perPeriod": "Compact<Balance>"
      },
      "NFTClassId": "u32",
      "Attributes": "BTreeMap<Vec<u8>,Vec<u8>>",
      "EstateId": "u64",
      "Coordinates": "Vec<(i32,i32)>",
      "Coordinate": "(i32,i32)",
      "NewBound": "(i32,i32)",
      "MetaverseInfo": {
        "owner": "AccountId",
        "metadata": "MetaverseMetadata",
        "currencyId": "FungibleTokenId"
      },
      "OrmlAccountData": {
        "free": "Balance",
        "frozen": "Balance",
        "reserved": "Balance"
      },
      "OrmlBalanceLock": {
        "amount": "Balance",
        "id": "LockIdentifier"
      },
      "OrmlVestingSchedule": {
        "token": "FungibleTokenId",
        "start": "BlockNumber",
        "period": "BlockNumber",
        "periodCount": "u32",
        "perPeriod": "Balance"
      },
      "Candidate": {
        "id": "AccountId",
        "fee": "Perbill",
        "bond": "Balance",
        "nominators": "Vec<Bond>",
        "total": "Balance",
        "state": "CollatorStatus"
      },
      "CollatorStatus": {
        "_enum": {
          "Active": "Null",
          "Idle": "Null",
          "Leaving": "RoundIndex"
        }
      },
      "RangeBalance": {
        "min": "Balance",
        "ideal": "Balance",
        "max": "Balance"
      },
      "RangePerbill": {
        "min": "Perbill",
        "ideal": "Perbill",
        "max": "Perbill"
      },
      "InflationInfo": {
        "expect": "RangeBalance",
        "annual": "RangePerbill",
        "round": "RangePerbill"
      },
      "OrderedSet": "Vec<Bond>",
      "Collator": {
        "id": "AccountId",
        "bond": "Balance",
        "nominators": "Vec<Bond>",
        "total": "Balance",
        "state": "CollatorStatus"
      },
      "CollatorSnapshot": {
        "bond": "Balance",
        "nominators": "Vec<Bond>",
        "total": "Balance"
      },
      "RoundInfo": {
        "current": "RoundIndex",
        "first": "BlockNumber",
        "length": "u32"
      },
      "Nominator": {
        "nominations": "Vec<Bond>",
        "total": "Balance"
      },
      "Bond": {
        "owner": "AccountId",
        "amount": "Balance"
      },
      "ValidatorStatus": {
        "_enum": {
          "Active": "Null",
          "Idle": "Null",
          "Leaving": "RoundIndex"
        }
      },
      "MetaverseToken": {
        "ticker": "Ticker",
        "totalSupply": "Balance"
      },
      "MetaverseParameter": {
        "_enum": {
          "MaxProposals": "u8",
          "SetReferendumJury": "AccountId"
        }
      },
      "Delegations": {
        "votes": "Balance",
        "capital": "Balance"
      },
      "Conviction": {
        "_enum": [
          "None",
          "Locked1x",
          "Locked2x",
          "Locked3x",
          "Locked4x",
          "Locked5x",
          "Locked6x"
        ]
      },
      "PalletGovernanceVote": {
        "aye": "bool",
        "balance": "Balance",
        "conviction": "Conviction"
      },
      "PriorLock": "(BlockNumber, Balance)",
      "ReferendumInfo": {
        "_enum": {
          "Ongoing": "ReferendumStatus<BlockNumber,Balance>",
          "Finished": {
            "passed": "bool",
            "end": "BlockNumber"
          }
        }
      }
    }
  }
}